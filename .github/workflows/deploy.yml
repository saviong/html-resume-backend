name: Deploy Azure Function App

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'   # align with Azure Functions runtime

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest test.py -v

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}   # using your service principal JSON

      - name: Deploy ARM Template (secure)
        uses: azure/cli@v1
        with:
          azcliversion: '2.72.0'
          inlineScript: |
            az deployment group validate \
              --resource-group html-resume \
              --template-file template.json \
              --parameters @parameters.json \
              --only-show-errors

            az deployment group create \
              --resource-group html-resume \
              --template-file template.json \
              --parameters @parameters.json \
              --only-show-errors

      - name: Ensure app settings for remote build + v2 indexing
        uses: azure/cli@v1
        with:
          azcliversion: '2.72.0'
          inlineScript: |
            az functionapp config appsettings set \
              --resource-group html-resume \
              --name resumevisitor-fn \
              --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true \
                         ENABLE_ORYX_BUILD=true \
                         AzureWebJobsFeatureFlags=EnableWorkerIndexing \
                         WEBSITE_RUN_FROM_PACKAGE=1 \
                         FUNCTIONS_WORKER_RUNTIME=python

      - name: Build function app
        run: |
          if [ -f "local.settings.json" ]; then
            echo "Backing up local.settings.json"
            cp local.settings.json local.settings.json.bak
          fi
          if [ ! -f "host.json" ]; then
            echo "Error: host.json is missing"
            exit 1
          fi

      - name: Vendor Python dependencies
        run: |
          python -m pip install --upgrade pip
          mkdir -p .python_packages/lib/site-packages
          pip install -r requirements.txt -t .python_packages/lib/site-packages

      - name: Create function zip (stage minimal files, prune junk)
        run: |
          build=$(mktemp -d)
          # stage only what Azure needs at the ZIP ROOT
          cp host.json "$build"/
          cp requirements.txt "$build"/
          cp function_app.py "$build"/
          # include vendored deps
          mkdir -p "$build"/.python_packages/lib/site-packages
          rsync -a .python_packages/lib/site-packages/ "$build"/.python_packages/lib/site-packages/

          # zip it (exclude junk)
          (cd "$build" && zip -r "$GITHUB_WORKSPACE/function-app.zip" . \
            -x "*.git*" "*.github*" "*test*" "*local.settings.json*" "*.pyc" "*__pycache__/*")

      - name: Inspect zip contents
        run: unzip -l function-app.zip | sed -n '1,200p'

      - name: Deploy Function App (config-zip)
        uses: azure/cli@v1
        with:
          azcliversion: '2.72.0'
          inlineScript: |
            az functionapp deployment source config-zip \
              --resource-group html-resume \
              --name resumevisitor-fn \
              --src function-app.zip

      - name: Force run-from-package = 1 and restart
        uses: azure/cli@v1
        with:
          azcliversion: '2.72.0'
          inlineScript: |
            az functionapp config appsettings set \
              --resource-group html-resume \
              --name resumevisitor-fn \
              --settings WEBSITE_RUN_FROM_PACKAGE=1
            az functionapp restart -g html-resume -n resumevisitor-fn

      - name: Verify function discovery (retry while host indexes)
        uses: azure/cli@v1
        with:
          azcliversion: '2.72.0'
          inlineScript: |
            HN=$(az functionapp show -g html-resume -n resumevisitor-fn --query defaultHostName -o tsv)

            echo "Warming up host at https://$HN/ ..."
            # Warm-up hits (donâ€™t fail the job if they 404/401)
            curl -sS -m 10 "https://$HN/" >/dev/null || true
            curl -sS -m 10 "https://$HN/admin/host/status" >/dev/null || true

            # Retry for up to ~2 minutes (24 x 5s) waiting for indexing
            for i in {1..24}; do
              COUNT=$(az functionapp function list -g html-resume -n resumevisitor-fn --query "length(@)")
              echo "Discovery attempt $i: functions found = $COUNT"
              if [ "$COUNT" -ge 1 ]; then
                az functionapp function list -g html-resume -n resumevisitor-fn -o table
                exit 0
              fi
              sleep 5
            done

            echo "No functions discovered after waiting. Failing the job." >&2
            exit 1